https://meet.google.com/wee-gywc-uqo 

class Program
    {
        private static void WriteFile(string filePath)
        {
            using (FileStream stream = new FileStream(filePath, FileMode.Create, FileAccess.Write, FileShare.None))
            {
                Console.WriteLine("Enter the data:");
                string data = Console.ReadLine();

                byte[] bytes = Encoding.UTF8.GetBytes(data);

                stream.Write(bytes, 0, bytes.Length);

                Console.WriteLine("Data recorded!");
            }
        }

        private static string ReadFile(string filePath)
        {
            using (FileStream stream = new FileStream(filePath,FileMode.Open,FileAccess.Read))
            {
                byte[] bytes = new byte[stream.Length];

                stream.Read(bytes, 0, bytes.Length);

                return Encoding.UTF8.GetString(bytes);
            }
        }

        static void Main(string[] args)
        {
            try
            {
                string filePath = "test.bin";

                WriteFile(filePath);

                Console.WriteLine($"Data read from the file:\n{ReadFile(filePath)}");

            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }

            Console.ReadLine();
        }
    }

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

class Program
    {
        static void Main(string[] args)
        {
            try
            {
                string filePath = "test.txt";

                WriteTxtFile(filePath);

                Console.WriteLine($"Data read from the file:\n{ReadTxtFile(filePath)}");

            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }

            Console.ReadLine();
        }

        private static string ReadTxtFile(string filePath)
        {
            using (FileStream stream = new FileStream(filePath, FileMode.Open))
            {
                using (StreamReader reader=new StreamReader(stream, Encoding.Unicode))
                {
                    return reader.ReadToEnd();
                }
            }
        }

        private static void WriteTxtFile(string filePath)
        {
            using (FileStream stream =new FileStream(filePath,FileMode.Create))
            {
                using (StreamWriter writer = new StreamWriter(stream, Encoding.Unicode))
                {
                    Console.WriteLine("Enter the data:");
                    string data = Console.ReadLine();
                    writer.WriteLine(data);

                    foreach (var item in data)
                    {
                        writer.Write($"{item} ");
                    }
                }
                Console.WriteLine("\nData recorded!");
            }
        }
    }

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    class Program
    {
        static void Main(string[] args)
        {
            try
            {
                string filePath = "test.asd";

                WriteBinFile(filePath);

                Console.WriteLine($"Data read from the file:\n{ReadBinFile(filePath)}");

            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }

            Console.ReadLine();
        }

        private static string ReadBinFile(string filePath)
        {
            using (FileStream stream = new FileStream(filePath, FileMode.Open))
            {
                using (BinaryReader reader=new BinaryReader(stream, Encoding.Unicode))
                {
                    return $"{reader.ReadString()}\n{reader.ReadDouble()}\n{reader.ReadInt32()}";
                }
            }
        }

        private static void WriteBinFile(string filePath)
        {
            using (FileStream stream =new FileStream(filePath,FileMode.Create))
            {
                using (BinaryWriter writer = new BinaryWriter(stream, Encoding.Unicode))
                {
                    Console.WriteLine("Enter the data:");
                    string data = Console.ReadLine();
                    double pi = 3.14159;
                    int number = 1256;

                    writer.Write(data);
                    writer.Write(pi);
                    writer.Write(number);
                }
                Console.WriteLine("\nData recorded!");
            }
        }
    }

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    class Program
    {
        static void Main(string[] args)
        {
            DirectoryInfo directoryInfo = new DirectoryInfo("../../");
            Console.WriteLine($"Full name: {directoryInfo.FullName}");
            Console.WriteLine($"Time of creation: {directoryInfo.CreationTime}");

            FileInfo[] files = directoryInfo.GetFiles();
            foreach (FileInfo item in files)
            {
                Console.WriteLine(item.Name);
            }

            Console.ReadLine();
        }
    }

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

using System.IO;
using System.Text;
using static System.Console;

namespace SimpleProject
{
    class Program
    {
    static void WriteFile(FileInfo f)
    {
        using (FileStream fs = f.Open(FileMode.Create, FileAccess.Write, FileShare.None))
        {
            WriteLine("\nEnter the data to write to the file:");
            string writeText = ReadLine();
            byte[] writeBytes = Encoding.Default.GetBytes(writeText);
            fs.Write(writeBytes, 0, writeBytes.Length);
            WriteLine("\nData recorded!\n");
        }
    }
    static string ReadFile(FileInfo f)
    {
        using (FileStream fs = f.OpenRead())
        {
            byte[] readBytes = new byte[(int)fs.Length];
            fs.Read(readBytes, 0, readBytes.Length);
            return Encoding.Default.GetString(readBytes);
        }
    }
        static void Main(string[] args)
        {
            DirectoryInfo dir = new DirectoryInfo(@"D:\Test");
            if (!dir.Exists) // если каталог не существует
            {
                dir.Create(); // создаем каталог
            }
            WriteLine($"Last access time to the directory: {dir.LastAccessTime}");

            // создаем подкаталог
            DirectoryInfo dir1 = dir.CreateSubdirectory("Subdir1");
            WriteLine($"Full path to the directory:\n{dir1.FullName}");

            FileInfo fInfo = new FileInfo(dir1 + @"\Test.bin");
            WriteFile(fInfo);
            WriteLine(ReadFile(fInfo));

            WriteLine($"\n\tOnly files with the extension '.bin':");
            FileInfo[] files = dir1.GetFiles("*.bin");
            foreach (FileInfo f in files)
            {
                WriteLine(f.Name);
            }
            WriteLine();
        }
    }
}

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


using System;
using System.IO;
using static System.Console;

namespace SimpleProject
{
    class Program
    {
        static void WriteFile(string path)
        {
            using (StreamWriter sw = File.CreateText(path))
            {
                WriteLine("Enter the data to write to the file:");
                string writeText = ReadLine();

                sw.WriteLine(writeText);
                foreach (var item in writeText)
                {
                    sw.Write($"{item} ");
                }
                WriteLine("\nData recorded!");
            }
        }
        static string ReadFile(string path)
        {
            using (StreamReader sr = File.OpenText(path))
            {
                return sr.ReadToEnd();
            }
        }
        static void Main(string[] args)
        {
            string path = @"D:/Test/Subdir1/Test.txt";

            try
            {
                WriteFile(path);
                WriteLine($"\nData read from the file:\n");
                WriteLine(ReadFile(path));
            }
            catch (Exception ex)
            {
                WriteLine(ex.Message);
            }
            WriteLine();
        }
    }
}

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


using System.IO;
using static System.Console;

namespace SimpleProject
{
    class Program
    {
        static void Main(string[] args)
        {
            string path = @"D:\Test";
            if(Directory.Exists(path))
            {
                WriteLine($"Date and time of catalog creation: {Directory.GetCreationTime(path)}");

                WriteLine($"\nSubdirectories in the specified directory:");
                foreach (string item in Directory.GetDirectories(path))
                {
                    WriteLine($"\t{item}");
                }

                WriteLine($"\nLogical devices of this computer:");
                foreach (string item in Directory.GetLogicalDrives())
                {
                    WriteLine($"\t{item}");
                }
                // удаляем каталог, все подкаталоги и файлы
                Directory.Delete(path, true);
            }
            if (!Directory.Exists(path))
            {
                WriteLine($"\nSpecified directory does not exist.\n");
            }
        }
    }
}

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

using System.Text.RegularExpressions;
using static System.Console;

namespace SimpleProject
{
    class Program
    {
        static void Main(string[] args)
        {
            string emailPattern = @"^([a-z0-9_-]+\.)*[a-z0-9_-]+@[a-z0-9_-]+(\.[a-z0-9_-]+)*\.[a-z]{2,6}$";

            Write("Enter e-mail: ");
            string email = ReadLine();
            Regex regex = new Regex(emailPattern);
            WriteLine(regex.IsMatch(email) ? "E-mail confirmed." : "Incorrect e-mail!");

            string phonePattern = @"^\+\d{ 2}\(\d{ 3}\)\d{ 3}-\d{ 2}-\d{ 2}$";
            Write("Enter phone: ");
            string phone = ReadLine();
            regex = new Regex(phonePattern);
            WriteLine(regex.IsMatch(email) ? "Data received." : "Data is not correct!");

            WriteLine("\nReplacement of words matching a pattern.");
            string text = "I like Java. Java forever.";
            string textPattern = "Java";

            WriteLine(text);
            WriteLine(Regex.Replace(text, textPattern, "C#"));
        }
    }
}

